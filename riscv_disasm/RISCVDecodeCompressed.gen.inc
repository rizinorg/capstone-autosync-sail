/*=======================================================================*/
/* This code was generated by the tool auto-sync-sail*/
/* (see https://github.com/rizinorg/capstone-autosync-sail)*/
/* from the sail model of RISC-V*/
/* (see https://github.com/riscv/sail-riscv) @ version
 * 8a75b297b116a1ffd8c62e98a7f43e2d93761d15.*/
/* DO NOT MODIFY THIS CODE MANUALLY. ANY MANUAL EDITS ARE OVERWRITTEN.*/
/* ------------------------------------------------------------------- */
/* Copyright Â© 2024-2025 moste00 <ubermenchun@gmail.com>*/
/* SPDX-License-Identifier: BSD-3-Clause*/
/*=======================================================================*/

#ifndef __RISCVDECODECOMPRESSED_GEN_INC__
#define __RISCVDECODECOMPRESSED_GEN_INC__
#include <stddef.h>
#include <stdint.h>
#include <string.h>

#include "RISCVAst.gen.inc"
#include "RISCVDecodeHelpers.h"

#define SLICE_BITVEC(v, s, e) ((v >> s) & ((((uint64_t)1) << (e - s + 1)) - 1))

#define INDEX_BITVEC(v, i) ((v >> i) & 1)

static void decode_compressed(struct ast *tree, uint64_t binary_stream,
                              RVContext *ctx) {
  //----------------------------C_NOP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_NOP;
      ;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADDI4SPN------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    uint64_t rd = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t nz3 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t nz2 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t nz96 = SLICE_BITVEC(binary_stream, 7, 10);
    uint64_t nz54 = SLICE_BITVEC(binary_stream, 11, 12);
    if ((!(((nz2 << 7) | (nz3 << 6) | (nz54 << 4) | nz96) == 0x00)) &&
        (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_ADDI4SPN;
      tree->ast_node.c_addi4spn.rdc = rd;
      tree->ast_node.c_addi4spn.nzimm =
          (nz96 << 4) | (nz54 << 2) | (nz3 << 1) | nz2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x2) {
    uint64_t rd = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui6 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t ui2 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_LW;
      tree->ast_node.c_lw.uimm = (ui6 << 4) | (ui53 << 1) | ui2;
      tree->ast_node.c_lw.rsc = rs1;
      tree->ast_node.c_lw.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LD------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t rd = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_LD;
      tree->ast_node.c_ld.uimm = (ui76 << 3) | ui53;
      tree->ast_node.c_ld.rsc = rs1;
      tree->ast_node.c_ld.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x6) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui6 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t ui2 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_SW;
      tree->ast_node.c_sw.uimm = (ui6 << 4) | (ui53 << 1) | ui2;
      tree->ast_node.c_sw.rsc1 = rs1;
      tree->ast_node.c_sw.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SD------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x7) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_SD;
      tree->ast_node.c_sd.uimm = (ui76 << 3) | ui53;
      tree->ast_node.c_sd.rsc1 = rs1;
      tree->ast_node.c_sd.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADDI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    uint64_t nzi40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t nzi5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(((nzi40 << 1) | nzi5) == 0x00)) &&
        ((!(rsd == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_ADDI;
      tree->ast_node.c_addi.nzi = (nzi5 << 5) | nzi40;
      tree->ast_node.c_addi.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_JAL------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x1) {
    uint64_t i5 = SLICE_BITVEC(binary_stream, 2, 2);
    uint64_t i31 = SLICE_BITVEC(binary_stream, 3, 5);
    uint64_t i7 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t i6 = SLICE_BITVEC(binary_stream, 7, 7);
    uint64_t i10 = SLICE_BITVEC(binary_stream, 8, 8);
    uint64_t i98 = SLICE_BITVEC(binary_stream, 9, 10);
    uint64_t i4 = SLICE_BITVEC(binary_stream, 11, 11);
    uint64_t i11 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((ctx->xlen == 32) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_JAL;
      tree->ast_node.c_jal = (i11 << 10) | (i10 << 9) | (i98 << 7) | (i7 << 6) |
                             (i6 << 5) | (i5 << 4) | (i4 << 3) | i31;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADDIW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x1) {
    uint64_t imm40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t imm5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(rsd == ctx->zreg)) &&
        ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_ADDIW;
      tree->ast_node.c_addiw.imm = (imm5 << 5) | imm40;
      tree->ast_node.c_addiw.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x2) {
    uint64_t imm40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t imm5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(rd == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_LI;
      tree->ast_node.c_li.imm = (imm5 << 5) | imm40;
      tree->ast_node.c_li.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADDI16SP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x02 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t nzi5 = SLICE_BITVEC(binary_stream, 2, 2);
    uint64_t nzi87 = SLICE_BITVEC(binary_stream, 3, 4);
    uint64_t nzi6 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t nzi4 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t nzi9 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(((nzi4 << 5) | (nzi5 << 4) | (nzi6 << 3) | (nzi87 << 1) | nzi9) ==
           0x00)) &&
        (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_ADDI16SP;
      tree->ast_node.c_addi16sp =
          (nzi9 << 5) | (nzi87 << 3) | (nzi6 << 2) | (nzi5 << 1) | nzi4;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LUI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t imm1612 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t imm17 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(rd == ctx->zreg)) &&
        ((!(rd == ctx->sp)) && ((!(((imm1612 << 1) | imm17) == 0x00)) &&
                                (extensionEnabled(RISCV_Ext_Zca, ctx))))) {
      tree->ast_node_type = RISCV_C_LUI;
      tree->ast_node.c_lui.imm = (imm17 << 5) | imm1612;
      tree->ast_node.c_lui.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SRLI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t nzui40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t nzui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(((nzui40 << 1) | nzui5) == 0x00)) &&
        (((ctx->xlen == 64) || (nzui5 == 0x0)) &&
         (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_SRLI;
      tree->ast_node.c_srli.shamt = (nzui5 << 5) | nzui40;
      tree->ast_node.c_srli.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SRAI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t nzui40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t nzui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(((nzui40 << 1) | nzui5) == 0x00)) &&
        (((ctx->xlen == 64) || (nzui5 == 0x0)) &&
         (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_SRAI;
      tree->ast_node.c_srai.shamt = (nzui5 << 5) | nzui40;
      tree->ast_node.c_srai.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ANDI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t i40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t i5 = SLICE_BITVEC(binary_stream, 12, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_ANDI;
      tree->ast_node.c_andi.imm = (i5 << 5) | i40;
      tree->ast_node.c_andi.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SUB------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x0 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x3 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_SUB;
      tree->ast_node.c_sub.rsd = rsd;
      tree->ast_node.c_sub.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_XOR------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x1 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x3 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_XOR;
      tree->ast_node.c_xor.rsd = rsd;
      tree->ast_node.c_xor.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_OR------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x2 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x3 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_OR;
      tree->ast_node.c_or.rsd = rsd;
      tree->ast_node.c_or.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_AND------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x3 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_AND;
      tree->ast_node.c_and.rsd = rsd;
      tree->ast_node.c_and.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SUBW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x0 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x3 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    if ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_SUBW;
      tree->ast_node.c_subw.rsd = rsd;
      tree->ast_node.c_subw.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADDW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x1 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x3 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    if ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_ADDW;
      tree->ast_node.c_addw.rsd = rsd;
      tree->ast_node.c_addw.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_J------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x5) {
    uint64_t i5 = SLICE_BITVEC(binary_stream, 2, 2);
    uint64_t i31 = SLICE_BITVEC(binary_stream, 3, 5);
    uint64_t i7 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t i6 = SLICE_BITVEC(binary_stream, 7, 7);
    uint64_t i10 = SLICE_BITVEC(binary_stream, 8, 8);
    uint64_t i98 = SLICE_BITVEC(binary_stream, 9, 10);
    uint64_t i4 = SLICE_BITVEC(binary_stream, 11, 11);
    uint64_t i11 = SLICE_BITVEC(binary_stream, 12, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_J;
      tree->ast_node.c_j = (i11 << 10) | (i10 << 9) | (i98 << 7) | (i7 << 6) |
                           (i6 << 5) | (i5 << 4) | (i4 << 3) | i31;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_BEQZ------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x6) {
    uint64_t i5 = SLICE_BITVEC(binary_stream, 2, 2);
    uint64_t i21 = SLICE_BITVEC(binary_stream, 3, 4);
    uint64_t i76 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rs = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t i43 = SLICE_BITVEC(binary_stream, 10, 11);
    uint64_t i8 = SLICE_BITVEC(binary_stream, 12, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_BEQZ;
      tree->ast_node.c_beqz.imm =
          (i8 << 7) | (i76 << 5) | (i5 << 4) | (i43 << 2) | i21;
      tree->ast_node.c_beqz.rs = rs;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_BNEZ------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x7) {
    uint64_t i5 = SLICE_BITVEC(binary_stream, 2, 2);
    uint64_t i21 = SLICE_BITVEC(binary_stream, 3, 4);
    uint64_t i76 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rs = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t i43 = SLICE_BITVEC(binary_stream, 10, 11);
    uint64_t i8 = SLICE_BITVEC(binary_stream, 12, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_BNEZ;
      tree->ast_node.c_bnez.imm =
          (i8 << 7) | (i76 << 5) | (i5 << 4) | (i43 << 2) | i21;
      tree->ast_node.c_bnez.rs = rs;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SLLI------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    uint64_t nzui40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t nzui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(((nzui40 << 1) | nzui5) == 0x00)) &&
        ((!(rsd == ctx->zreg)) && (((ctx->xlen == 64) || (nzui5 == 0x0)) &&
                                   (extensionEnabled(RISCV_Ext_Zca, ctx))))) {
      tree->ast_node_type = RISCV_C_SLLI;
      tree->ast_node.c_slli.shamt = (nzui5 << 5) | nzui40;
      tree->ast_node.c_slli.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LWSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x2) {
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 2, 3);
    uint64_t ui42 = SLICE_BITVEC(binary_stream, 4, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t ui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(rd == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_LWSP;
      tree->ast_node.c_lwsp.uimm = (ui76 << 4) | (ui5 << 3) | ui42;
      tree->ast_node.c_lwsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LDSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t ui86 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui43 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t ui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if ((!(rd == ctx->zreg)) &&
        ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_LDSP;
      tree->ast_node.c_ldsp.uimm = (ui86 << 3) | (ui5 << 2) | ui43;
      tree->ast_node.c_ldsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SWSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x6) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 7, 8);
    uint64_t ui52 = SLICE_BITVEC(binary_stream, 9, 12);
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_SWSP;
      tree->ast_node.c_swsp.uimm = (ui76 << 4) | ui52;
      tree->ast_node.c_swsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SDSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x7) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t ui86 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if ((ctx->xlen == 64) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_SDSP;
      tree->ast_node.c_sdsp.uimm = (ui86 << 3) | ui53;
      tree->ast_node.c_sdsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_JR------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 11);
    if ((!(rs1 == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_JR;
      tree->ast_node.c_jr = rs1;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_JALR------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 11);
    if ((!(rs1 == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx))) {
      tree->ast_node_type = RISCV_C_JALR;
      tree->ast_node.c_jalr = rs1;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_MV------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    if ((!(rd == ctx->zreg)) &&
        ((!(rs2 == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_MV;
      tree->ast_node.c_mv.rd = rd;
      tree->ast_node.c_mv.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_EBREAK------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    if (extensionEnabled(RISCV_Ext_Zca, ctx)) {
      tree->ast_node_type = RISCV_C_EBREAK;
      ;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADD------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 11);
    if ((!(rsd == ctx->zreg)) &&
        ((!(rs2 == ctx->zreg)) && (extensionEnabled(RISCV_Ext_Zca, ctx)))) {
      tree->ast_node_type = RISCV_C_ADD;
      tree->ast_node.c_add.rsd = rsd;
      tree->ast_node.c_add.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_NOP_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    uint64_t im40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t im5 = SLICE_BITVEC(binary_stream, 12, 12);
    if (!(((im40 << 1) | im5) == 0x00)) {
      tree->ast_node_type = RISCV_C_NOP_HINT;
      tree->ast_node.c_nop_hint = (im5 << 5) | im40;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADDI_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 11);
    if (!(rsd == ctx->zreg)) {
      tree->ast_node_type = RISCV_C_ADDI_HINT;
      tree->ast_node.c_addi_hint = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LI_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x2) {
    uint64_t imm40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t imm5 = SLICE_BITVEC(binary_stream, 12, 12);
    tree->ast_node_type = RISCV_C_LI_HINT;
    tree->ast_node.c_li_hint = (imm5 << 5) | imm40;
    return;
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LUI_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t imm1612 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t imm17 = SLICE_BITVEC(binary_stream, 12, 12);
    if (!(((imm1612 << 1) | imm17) == 0x00)) {
      tree->ast_node_type = RISCV_C_LUI_HINT;
      tree->ast_node.c_lui_hint = (imm17 << 5) | imm1612;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_MV_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    if (!(rs2 == ctx->zreg)) {
      tree->ast_node_type = RISCV_C_MV_HINT;
      tree->ast_node.c_mv_hint = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ADD_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 7, 11) == 0x00 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    if (!(rs2 == ctx->zreg)) {
      tree->ast_node_type = RISCV_C_ADD_HINT;
      tree->ast_node.c_add_hint = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SLLI_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x0) {
    uint64_t nzui40 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t nzui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if (((((nzui40 << 1) | nzui5) == 0x00) || (rsd == ctx->zreg)) &&
        ((ctx->xlen == 64) || (nzui5 == 0x0))) {
      tree->ast_node_type = RISCV_C_SLLI_HINT;
      tree->ast_node.c_slli_hint.shamt = (nzui5 << 5) | nzui40;
      tree->ast_node.c_slli_hint.rsd = rsd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SRLI_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x0 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    tree->ast_node_type = RISCV_C_SRLI_HINT;
    tree->ast_node.c_srli_hint = rsd;
    return;
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SRAI_HINT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 6) == 0x00 &&
      SLICE_BITVEC(binary_stream, 10, 11) == 0x1 &&
      SLICE_BITVEC(binary_stream, 12, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsd = SLICE_BITVEC(binary_stream, 7, 9);
    tree->ast_node_type = RISCV_C_SRAI_HINT;
    tree->ast_node.c_srai_hint = rsd;
    return;
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FLWSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 2, 3);
    uint64_t ui42 = SLICE_BITVEC(binary_stream, 4, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t ui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if (extensionEnabled(RISCV_Ext_Zcf, ctx)) {
      tree->ast_node_type = RISCV_C_FLWSP;
      tree->ast_node.c_flwsp.imm = (ui76 << 4) | (ui5 << 3) | ui42;
      tree->ast_node.c_flwsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FSWSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x7) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 7, 8);
    uint64_t ui52 = SLICE_BITVEC(binary_stream, 9, 12);
    if (extensionEnabled(RISCV_Ext_Zcf, ctx)) {
      tree->ast_node_type = RISCV_C_FSWSP;
      tree->ast_node.c_fswsp.uimm = (ui76 << 4) | ui52;
      tree->ast_node.c_fswsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FLW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x3) {
    uint64_t rd = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui6 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t ui2 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zcf, ctx)) {
      tree->ast_node_type = RISCV_C_FLW;
      tree->ast_node.c_flw.uimm = (ui6 << 4) | (ui53 << 1) | ui2;
      tree->ast_node.c_flw.rsc = rs1;
      tree->ast_node.c_flw.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FSW------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x7) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui6 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t ui2 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zcf, ctx)) {
      tree->ast_node_type = RISCV_C_FSW;
      tree->ast_node.c_fsw.uimm = (ui6 << 4) | (ui53 << 1) | ui2;
      tree->ast_node.c_fsw.rsc1 = rs1;
      tree->ast_node.c_fsw.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FLDSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x1) {
    uint64_t ui86 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui43 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rd = SLICE_BITVEC(binary_stream, 7, 11);
    uint64_t ui5 = SLICE_BITVEC(binary_stream, 12, 12);
    if (extensionEnabled(RISCV_Ext_Zcd, ctx)) {
      tree->ast_node_type = RISCV_C_FLDSP;
      tree->ast_node.c_fldsp.uimm = (ui86 << 3) | (ui5 << 2) | ui43;
      tree->ast_node.c_fldsp.rd = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FSDSP------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x5) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 6);
    uint64_t ui86 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zcd, ctx)) {
      tree->ast_node_type = RISCV_C_FSDSP;
      tree->ast_node.c_fsdsp.uimm = (ui86 << 3) | ui53;
      tree->ast_node.c_fsdsp.rs2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FLD------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x1) {
    uint64_t rd = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zcd, ctx)) {
      tree->ast_node_type = RISCV_C_FLD;
      tree->ast_node.c_fld.uimm = (ui76 << 3) | ui53;
      tree->ast_node.c_fld.rsc = rs1;
      tree->ast_node.c_fld.rdc = rd;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_FSD------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x5) {
    uint64_t rs2 = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t ui76 = SLICE_BITVEC(binary_stream, 5, 6);
    uint64_t rs1 = SLICE_BITVEC(binary_stream, 7, 9);
    uint64_t ui53 = SLICE_BITVEC(binary_stream, 10, 12);
    if (extensionEnabled(RISCV_Ext_Zcd, ctx)) {
      tree->ast_node_type = RISCV_C_FSD;
      tree->ast_node.c_fsd.uimm = (ui76 << 3) | ui53;
      tree->ast_node.c_fsd.rsc1 = rs1;
      tree->ast_node.c_fsd.rsc2 = rs2;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LBU------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x0 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rdc = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t uimm1 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t uimm0 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t rs1c = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_LBU;
      tree->ast_node.c_lbu.uimm = (uimm1 << 1) | uimm0;
      tree->ast_node.c_lbu.rdc = rdc;
      tree->ast_node.c_lbu.rs1c = rs1c;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LHU------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 6, 6) == 0x0 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rdc = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t uimm1 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t rs1c = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_LHU;
      tree->ast_node.c_lhu.uimm = (uimm1 << 4) | 0x0;
      tree->ast_node.c_lhu.rdc = rdc;
      tree->ast_node.c_lhu.rs1c = rs1c;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_LH------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 6, 6) == 0x1 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x1 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rdc = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t uimm1 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t rs1c = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_LH;
      tree->ast_node.c_lh.uimm = (uimm1 << 4) | 0x0;
      tree->ast_node.c_lh.rdc = rdc;
      tree->ast_node.c_lh.rs1c = rs1c;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SB------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x2 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2c = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t uimm1 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t uimm0 = SLICE_BITVEC(binary_stream, 6, 6);
    uint64_t rs1c = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_SB;
      tree->ast_node.c_sb.uimm = (uimm1 << 1) | uimm0;
      tree->ast_node.c_sb.rs1c = rs1c;
      tree->ast_node.c_sb.rs2c = rs2c;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SH------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x0 &&
      SLICE_BITVEC(binary_stream, 6, 6) == 0x0 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x3 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2c = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t uimm1 = SLICE_BITVEC(binary_stream, 5, 5);
    uint64_t rs1c = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_SH;
      tree->ast_node.c_sh.uimm = (uimm1 << 4) | 0x0;
      tree->ast_node.c_sh.rs1c = rs1c;
      tree->ast_node.c_sh.rs2c = rs2c;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ZEXT_B------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 4) == 0x0 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_ZEXT_B;
      tree->ast_node.c_zext_b = rsdc;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SEXT_B------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 4) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if ((extensionEnabled(RISCV_Ext_Zcb, ctx)) &&
        (extensionEnabled(RISCV_Ext_Zbb, ctx))) {
      tree->ast_node_type = RISCV_C_SEXT_B;
      tree->ast_node.c_sext_b = rsdc;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ZEXT_H------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 4) == 0x2 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if ((extensionEnabled(RISCV_Ext_Zcb, ctx)) &&
        (extensionEnabled(RISCV_Ext_Zbb, ctx))) {
      tree->ast_node_type = RISCV_C_ZEXT_H;
      tree->ast_node.c_zext_h = rsdc;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_SEXT_H------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 4) == 0x3 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if ((extensionEnabled(RISCV_Ext_Zcb, ctx)) &&
        (extensionEnabled(RISCV_Ext_Zbb, ctx))) {
      tree->ast_node_type = RISCV_C_SEXT_H;
      tree->ast_node.c_sext_h = rsdc;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ZEXT_W------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 4) == 0x4 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if ((extensionEnabled(RISCV_Ext_Zcb, ctx)) &&
        ((extensionEnabled(RISCV_Ext_Zba, ctx)) && (ctx->xlen == 64))) {
      tree->ast_node_type = RISCV_C_ZEXT_W;
      tree->ast_node.c_zext_w = rsdc;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_NOT------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 2, 4) == 0x5 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x3 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if (extensionEnabled(RISCV_Ext_Zcb, ctx)) {
      tree->ast_node_type = RISCV_C_NOT;
      tree->ast_node.c_not = rsdc;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_MUL------------------------------//
  if (SLICE_BITVEC(binary_stream, 0, 1) == 0x1 &&
      SLICE_BITVEC(binary_stream, 5, 6) == 0x2 &&
      SLICE_BITVEC(binary_stream, 10, 12) == 0x7 &&
      SLICE_BITVEC(binary_stream, 13, 15) == 0x4) {
    uint64_t rs2c = SLICE_BITVEC(binary_stream, 2, 4);
    uint64_t rsdc = SLICE_BITVEC(binary_stream, 7, 9);
    if ((extensionEnabled(RISCV_Ext_Zcb, ctx)) &&
        ((extensionEnabled(RISCV_Ext_M, ctx)) ||
         (extensionEnabled(RISCV_Ext_Zmmul, ctx)))) {
      tree->ast_node_type = RISCV_C_MUL;
      tree->ast_node.c_mul.rsdc = rsdc;
      tree->ast_node.c_mul.rs2c = rs2c;
      return;
    }
  }
  //------------------------------------------------------------------------------------//

  //----------------------------C_ILLEGAL------------------------------//
  {
    uint64_t s = SLICE_BITVEC(binary_stream, 0, 31);
    tree->ast_node_type = RISCV_C_ILLEGAL;
    tree->ast_node.c_illegal = s;
    return;
  }
  //------------------------------------------------------------------------------------//
}
#endif
